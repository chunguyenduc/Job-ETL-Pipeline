version: '3'
x-environment:
    &airflow_environment
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=${POSTGRES_CONN}
    - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}

x-airflow-image: &airflow-image ${AIRFLOW_BUILD_IMAGE}:${TAG}

services:
    postgres:
        image: postgres:latest
        container_name: postgres
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        logging:
            options:
                max-size: 10m
                max-file: "3"
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data

    airflow_init:
        image: *airflow-image
        depends_on:
            - postgres
        environment: *airflow_environment
        container_name: airflow_init
        entrypoint: /bin/bash
        command: -c 'airflow db upgrade && airflow db init'

    airflow_webserver:
        image: *airflow-image
        container_name: airflow_webserver
        depends_on:
            - postgres
        volumes:
            - ./airflow/logs:/opt/airflow/logs
            - ./airflow/dags:/opt/airflow/dags
        ports:
            - "8080:8080"
        environment: *airflow_environment
        command: webserver

    airflow_scheduler:
        image: *airflow-image
        container_name: airflow_scheduler
        depends_on:
            - postgres
        volumes:
            - ./airflow/dags:/opt/airflow/dags
            - ./airflow/logs:/opt/airflow/logs
        environment: *airflow_environment
        command: scheduler

    node-exporter:
        image: prom/node-exporter:latest
        container_name: node-exporter
        restart: unless-stopped
        expose:
            - 9100
    vmagent:
        container_name: vmagent
        image: victoriametrics/vmagent:v1.85.3
        depends_on:
            - "victoriametrics"
        ports:
            - 8429:8429
        volumes:
            - vmagentdata:/vmagentdata
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - "--promscrape.config=/etc/prometheus/prometheus.yml"
        restart: always

    victoriametrics:
        container_name: victoriametrics
        image: victoriametrics/victoria-metrics:v1.85.3
        ports:
            - 8428:8428
        volumes:
            - vmdata:/storage
        command:
            - "--storageDataPath=/storage"
            - "--httpListenAddr=:8428"
            - "--vmalert.proxyURL=http://vmalert:8880"
        restart: always

volumes:
    pgdata:
    vmagentdata:
    vmdata:
